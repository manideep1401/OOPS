  class Myclass {

    static int  count = 0;
    final double pi =3.1415;

    public Myclass() {
         count++;
         System.out.println("count = "+count);
    
    
}
public static void main(String[] args) {
    System.out.println("count = "+count);
    Myclass c1 = new Myclass();
    Myclass c2 = new Myclass();
    Myclass c3 = new Myclass();
    Myclass c4 = new Myclass();
    Myclass c5 = new Myclass();
    Myclass c6 = new Myclass();
    System.out.println("count = "+count); 
}
}

//new book

class Book {
    
    String title;
    String author;
    int year;

    public Book(String title , String author, int year) {
        this.title = title;
        this.author = author;
        this.year = year;
    }
public void display() {
    System.out.println("title = "+title);
    System.out.println("author of the book = "+author);
    System.out.println("year of publish = "+year);
}
public static void main(String[] args) {
    Book b1 = new Book("Harry Potter", "J.K. Rowling", 1997);
    Book b2 =new Book("The Lord of the Rings", "J.R.R. Tolkien", 1954);
    b1.display();
    b2.display();
}
}


ðŸ‘ŒðŸ‘ŒðŸ‘ŒðŸ‘Œ

prob-2
public class Vehcile {
    String brand = "Unknown";
    int Speed = 0;

    Vehcile() {

        this.brand = brand;
        this.Speed = Speed;

        System.err.println("brand :"+brand);
        System.err.println("Speed :"+Speed +"km/h");
}

void start(){
    System.out.println(brand+"Starting..");
}
}//end

class Car extends Vehcile{
    int doors;
    public Car (String brand, int Speed, int doors){
        this.brand = brand;
        this.Speed = Speed;
        this.doors = doors;
    }

    public  void showCarDetails(){
    System.out.println("Car has :"+doors+"doors");
    }
}//end

class bikes extends Vehcile{
    boolean hasgears;

    public bikes(String brand, int Speed, boolean hasgears){
        this.brand = brand;
        this.Speed = Speed;
        this.hasgears = hasgears;
}

public  void showbikeDetails(){
    System.out.println("Car has :"+hasgears+"hasgerrs");
    }
}//end



class Truck extends Vehcile{
    int Capacity;
    public Truck (String brand, int Speed, int Capacity){
        this.brand = brand;
        this.Speed = Speed;
        this.Capacity = Capacity;
    }

    public  void showCarDetails(){
    System.out.println("Car has :"+Capacity+"Capacity");
    }
}//end


public class Main{
    public static void main(String[] args) {
        
        
    }
}





prob-1

import java.util.Scanner;
import jdk.jshell.execution.Util;

public class Calci {
    
    public void addition(int a , int b){
        System.out.println("addition :"+(a+b));
    }

    public  void biff(int a , int b){
        System.out.println("Substraction :"+(a - b));
    }

} //end

class  Calci2 extends Calci{

    public void multi(int a , int b){
        System.out.println("multiplication :"+(a*b));
    }

} // end

class Calci3 extends Calci2{

    public void divid(int a , int b){
if(b == 0){
        System.out.println("b shouls not be zero");     }
    else{
        System.out.println("Division :" +(a/b));
    }
    }
}//end

public class Multilevel {

    public static void main(String[] args) {
        Scanner input = new Scanner();
        
    }
}

//not completed complete




WEEK--7:--


abstract class Animal{
    public abstract void sound();
    abstract void sound();
}
class Lion extends Animal{
    void sound(){
        System.out.println(" Lion Roars..");
}}

    class Tiger extends Animal{
        void sound(){
    System.out.println(" Tiger Roars..");
    }
    }

    class Animal1{
        public static void main(String[] args) {
            Lion a = new Lion();
            a.sound();

            Tiger t = new Tiger();
            t.sound();


    }
    }



2nd-----

abstract  class PatternPrinting{
    int n;
    abstract void printPattern(int n);
}

class Starpattren  extends PatternPrinting{

void printPattern(int n){
    for(int i=0;i<n;i++){
        for(int j=0 ;j<=i; j++){
            System.out.print("*");
}
    System.out.print(" ");
}
}
}

class  Numberpattren  extends PatternPrinting{
    void printPattern(int n){
        for(int i=0;i<n;i++){
            for(int j=0 ;j<=i; j++){
                System.out.print("1");
}
System.out.print(" ");
}
}
}

class Pattern{
    public static void main(String[] args) {
        Starpattren pp = new Starpattren();
        pp.printPattern(5);

        Numberpattren nm = new Numberpattren();
        nm.printPattern(5);
    }
}

3----

..................................................................................

WEEK--8

1st)..

interface Shapee {
    float pi = 3.14f;
    int getperimeter();
}

class Rectangle implements Shapee {
    int length;
    int breadth;

    public Rectangle(int length, int breadth) {
        this.length = length;
        this.breadth = breadth;
    }

    public int getperimeter() {
        return 2 * (length + breadth);
    }
}

class Circle implements Shapee {
    private int radius;

    public Circle(int radius) {
        this.radius = radius;
    }

    public int getperimeter() {
        return (int) (2 * pi * radius);
    }
}

class Triangle implements Shapee {
    private int side1;
    private int side2;
    private int side3;

    public Triangle(int side1, int side2, int side3) {
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }

    public int getperimeter() {
        return (side1 + side2 + side3);
    }
}

class InShape {
    public static void main(String[] args) {
        Rectangle r = new Rectangle(5, 6);
        System.out.println("Rectangle perimeter: " + r.getperimeter());

        Circle c = new Circle(7);
        System.out.println("Circle perimeter: " + c.getperimeter());

        Triangle t = new Triangle(8, 9, 10);
        System.out.println("Triangle perimeter: " + t.getperimeter());
    }
}


2nd)...............................

interface intplayable {
    void play();
    
}
class Football implements intplayable{
    public void play(){
        System.out.println("Football is playing");
    }
}

class Vollyball implements intplayable{
    public void play(){
        System.out.println("Vollyball is playing");
    }
}

class Basketball implements intplayable{
    public void play(){
        System.out.println("Basketball is playing");
    }
}

public  class playable{
    public static void main(String[] args) {
        Football f = new Football();
        f.play();
        Vollyball v = new Vollyball();
        v.play();
        Basketball b = new Basketball();
        b.play();
    }
}

3rd)...............................................

interface loginSystem{
    public boolean  login(String username,String password);
    
}
class Universitylogin implements loginSystem {
    public boolean login(String username, String password) {
        if(username == "ashish1" && password == "cse1111") {
            System.out.println("Successfully logged in..");
            return true;
    }
    else {
        System.out.println("Invalid username or password");
        return false;
    }
}
}

class login{
    public static void main(String[] args) {
        Universitylogin ul = new Universitylogin();
        ul.login("ashish1", "cse1111");
        ul.login("ashih","ashish01");
    }
}

----------------------------------------------------------------------------------------------------__________________

WEEK--9
1q)public class Exceptionnumber {
    public static void checknum(int num) throws Exception {
        if (num%2 == 0){
            System.out.println("number cannont be even" +"--"+  num+"--"  + "so try using another number");
        }
        else{
            System.out.println("given number is checked"+num+"successfully exicuted");
        }

    }

    public static void main(String[] args) {
        Exceptionnumber en = new Exceptionnumber();
        int num = 5;
        try {
            checknum(5);
        }
        catch (Exception e) {
            System.out.println("number cannot be cheked becuse it is an even"+ num +"number"+e.getMessage());
        }
        
    }
}

---------
2q)
import java.io.BufferedReader;
import java.io.FileReader;

public class File {
    public static void main(String[] args) {
    try {
    BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\CSE Lab - 026\\OneDrive - Amrita Vishwa Vidyapeetham\\cse108___\\.dist\\file.text"));
    String line;
    while((line =br.readLine)!= null){
        System.out.println(line);
    }
    br.close();
}
}
catch (FileNotFoundException e) {
    System.err.println("File not found: " + e.getMessage());
}
catch (IOException e) {
    System.out.println( "Error reading file: " + e.getMessage());
}}
---------------
3rd)
import java.util.Scanner;
class Arthematic {
    public static void main(String[] args) {
        try {
            Scanner sc = new Scanner(System.in);
            System.err.println("enter your first number :");
            int a = sc.nextInt();
            System. out. println("enter your secind number :");
            int b = sc.nextInt();

            int result = a/b;
            System.out.println("Result: " + result);;

        } catch (Exception e) {
            System.out.println(" Error: Division by zero or invalid input."+e.getMessage());
        }
        finally{
            System.out.println(" program is beaing exicuted");
        }
    }
}

-------------
4q)
class University {
    String universityName = "Amrita vishwa vidyapitam";
    
    class Department{
        String deptName = "CSE";
        int deptcode = 1012;

}
        class Student{
            String studentName = "Mani";
            int rollNum = 1420;
        }

        public static void main(String[] args) {
            University un = new University();
            System.err.println(un.universityName);

            Department dp = un.new Department();
            System.err.println(dp.deptName);
            System.err.println(dp.deptcode);

            Student st = un.new Student();
            System.err.println(st.studentName);
            System.err.println(st.rollNum);
        }
}

